# Upstreams dos serviços dentro da mesma network do compose
upstream web_front {
    server web:4200;
}

upstream api_backend {
    server api:3000;
    # ESTA É A DIRETIVA CHAVE
    # 1. Define o resolvedor de DNS como o DNS interno do Docker (sempre 127.0.0.11).
    # 2. 'valid=5s' instrui o Nginx a re-consultar o DNS a cada 5 segundos.
    #    Isso permite que ele descubra novos contêineres (quando você escala para mais)
    #    e remova contêineres que pararam.
    resolver 127.0.0.11 valid=10s;
}

server {
    listen 80;
    server_name _;

    # ---------- FRONT (Angular dev server com HMR) ----------
    location / {
        proxy_pass http://web_front;
        proxy_http_version 1.1;

        # Cabeçalhos padrão de proxy
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---------- API (Nest em /api) ----------
    # Sem barra no final do proxy_pass para PRESERVAR o prefixo /api
    location /api/ {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;

        #define header para teste de load balancer
        add_header X-Upstream-Addr $upstream_addr;
        add_header X-Upstream-Status $upstream_status;


        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
